name: build
on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 4"
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache: false

      - name: Install v2dat
        run: |
          go install github.com/urlesistiana/v2dat@latest
          
      - name: Get geoip.dat files
        run: |
          wget -O geoip.dat https://raw.githubusercontent.com/Loyalsoldier/geoip/release/cn.dat
          
      - name: Get geosite.dat files
        run: |
          wget https://github.com/Loyalsoldier/domain-list-custom/releases/latest/download/geosite.dat

      - name: Convert rule dat files
        run: |
          mkdir -p rule
          v2dat unpack geoip -o ./rule -f cn ./geoip.dat
          v2dat unpack geosite -o ./rule -f cn ./geosite.dat
          v2dat unpack geosite -o ./rule -f category-ads-all ./geosite.dat
          v2dat unpack geosite -o ./rule -f gfw ./geosite.dat
          v2dat unpack geosite -o ./rule -f geolocation-!cn ./geosite.dat
          mv ./rule/geosite_geolocation-!cn.txt ./rule/geosite_geolocation-ncn.txt

      - name: Delete old releases
        uses: Nats-ji/delete-old-releases@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          keep-count: 0
          keep-old-minor-releases: false
          remove-tags: true

      - name: Set variables
        env:
          TZ: Asia/Shanghai
        run: |
          echo "RELEASE_NAME=Released on $(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "TAG_NAME=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV

      - name: Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ env.RELEASE_NAME }}
          tag_name: ${{ env.TAG_NAME }}
          draft: false
          prerelease: false
          files: |
            ./rule/*.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
